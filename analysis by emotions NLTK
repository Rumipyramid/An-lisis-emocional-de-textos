from textblob import TextBlob
import nltk
from nltk.corpus import sentiwordnet as swn
from nltk.corpus import wordnet as wn
from nltk.tokenize import word_tokenize
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.preprocessing import StandardScaler
from sklearn.feature_extraction import DictVectorizer


nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')
nltk.download('wordnet')
nltk.download('stopwords')
nltk.download('sentiwordnet')

with open("C:/Users/USUARIO/Desktop/LEMURIA/Python/Textos análisis/Poemas/The seventh.txt", 'r') as archivo:
    texto1 = archivo.read()

with open("C:/Users/USUARIO/Desktop/LEMURIA/Python/Textos análisis/Poemas/I AM SO IN LOVE WITH YOU I WANT TO LIE DOWN IN TH EMIDDLE OF A MAJOR PUBLIC INTERSECTION AND CRY.txt", 'r') as archivo:
    texto2 = archivo.read()

with open("C:/Users/USUARIO/Desktop/LEMURIA/Python/Textos análisis/Poemas/Ocasión.txt", 'r') as archivo:
    texto3 = archivo.read()

def extract_emotions_NRC(texto):
    """
    Esta función toma un texto como entrada y devuelve un diccionario de emociones con sus respectivos puntajes
    utilizando la Biblioteca Nacional de Emociones (NRC).
    """
    # Definimos el diccionario de emociones
    emociones = {
        'enojo': 0,
        'miedo': 0,
        'alegría': 0,
        'tristeza': 0,
        'disgusto': 0,
        'sorpresa': 0,
        'anticipación': 0,
        'confianza': 0
    }

    # Tokenizamos el texto en palabras
    palabras = word_tokenize(texto)

    # Iteramos sobre cada palabra del texto
    for palabra in palabras:
        # Obtenemos la lista de synsets de WordNet para la palabra
        synsets = wn.synsets(palabra)

        # Iteramos sobre cada synset de WordNet de la palabra
        for synset in synsets:
            # Obtenemos el sentimiento de SentiWordNet para el synset
            sentimientos = swn.senti_synset(synset.name())

            # Agregamos los puntajes de sentimiento al diccionario de emociones
            emociones['enojo'] += sentimientos.neg_score()
            emociones['miedo'] += sentimientos.obj_score() - sentimientos.pos_score()
            emociones['alegría'] += sentimientos.pos_score()
            emociones['tristeza'] += sentimientos.neg_score()
            emociones['disgusto'] += sentimientos.neg_score()
            emociones['sorpresa'] += sentimientos.obj_score() - sentimientos.pos_score()
            emociones['anticipación'] += sentimientos.obj_score() - sentimientos.neg_score()
            emociones['confianza'] += sentimientos.pos_score()

    return emociones


# Ejemplo de uso de la función extract_emotions_NRC
emociones_ejemplo1 = extract_emotions_NRC(texto1)
print(emociones_ejemplo1)

emociones_ejemplo2 = extract_emotions_NRC(texto2)
print(emociones_ejemplo2)

emociones_ejemplo3 = extract_emotions_NRC(texto3)
print(emociones_ejemplo3)
